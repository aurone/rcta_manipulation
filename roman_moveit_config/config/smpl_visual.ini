# Just some introspection here, my main usage of smpl's visualize macros is to
# use a different channel name for each semantic visualization and almost
# always the same level is used across multiple macro instances. An alternative
# would be to have way fewer labels and actually make use of differing levels
# for the same channel. This sounds simpler, with the disadvantage that
# visualizations cannot be enabled/disabled as independently. However, I often
# end up enabling/disabling visualizations by their severity category
# anyway...hmm...

[sv.smpl]
# States as they are expanded during the search (ManipLattice, WorkspaceLattice,
# WorkspaceLatticeEGraph) [DEBUG]
expansion=INFO

# The start state input to ManipLattice and WorkspaceLattice, if invalid [WARN]
invalid_start=INFO

# The start state input to ManipLattice and WorkspaceLattice, if valid [INFO]
start_config=WARN

# The goal state discovered by the search, visualized during path extraction
# (ManipLattice, WorkspaceLattice, WorkspaceLatticeEGraph) [INFO]
goal_config=WARN

# The goal pose input to ManipLattice and WorkspaceLattice [INFO]
goal_pose=WARN

# The goal state input to ManipLattice [INFO]
target_config=WARN

# The three-dimensional project of states on the experience-graph, visualized
# when a new goal is input to the heuristic (DijkstraEgraphHeuristic3D and
# SparseEGraphDijkstra3DHeuristic) [INFO]
egraph_projection=INFO

# The source and destination states of shortcut actions
# (WorkspaceLatticeEGraph) [INFO]
shortcut=WARN

# The source and destination states of snap actions (WorkspaceLatticeEGraph)
# [INFO]
snap=WARN

# Visualization of the adaptive grid (which cells are marked as
# high-dimensional) during planning (AdaptiveWorkspaceLattice) [INFO]
adaptive_grid_plan=INFO

# Visualization of the adaptive grid (which cells are marked as
# high-dimensional) during planning (AdaptiveWorkspaceLattice) [INFO]
adaptive_grid_track=INFO

[sv.smpl_ros]

# [INFO]
trajectory=WARN

# [DEBUG]
bfs_walls=INFO

# [DEBUG]
bfs_values=INFO

[sv.smpl_moveit_interface]
collision_world_bounds=INFO
collision_robot_bounds=WARN

world_collision=INFO
self_collision=INFO

