<launch>
    <!-- Actual arguments -->
    <arg name="debug" default="false"/>
    <arg name="live" default="true"/>

    <include file="$(find object_manipulation_planner)/launch/upload_crate.launch"/>

    <!-- We're loading the URDF/SRDF/etc into the node's private namespace, so
    avoiding overwriting the URDF is no longer an issue.
    -->
    <arg name="load_robot_description" default="true"/>

    <arg if="$(arg live)" name="follow_joint_trajectory_action_name" default="trajectory_dispatcher/follow_joint_trajectory"/>
    <arg if="$(arg live)" name="gripper_command_action_name" default="rcta_right_robotiq_controller/gripper_action"/>
    <arg unless="$(arg live)" name="follow_joint_trajectory_action_name" default="follow_joint_trajectory"/>
    <arg unless="$(arg live)" name="gripper_command_action_name" default="gripper_command"/>

    <arg if="$(arg debug)" name="launch_prefix" value="gdb ex --args"/>
    <arg unless="$(arg debug)" name="launch_prefix" value=""/>

    <include ns="object_manip_planner" file="$(find object_manipulation_planner)/launch/planning_context.launch.xml">
        <arg name="load_robot_description" value="$(arg load_robot_description)"/>
    </include>

    <!-- Same deal as above...using a custom collision model configuration
    solely for the purposes of modeling the root joint as a floating joint.
    TODO: is it worth it to find a way to reasonably share the actual
    description of the collision model
    -->
    <rosparam ns="object_manip_planner" command="load" file="$(find object_manipulation_planner)/config/collision_model.yaml"/>

    <!--env name="CPUPROFILE" value="/home/aurone/omp.prof"/-->
    <env name="SMPL_VISUALIZE_CONFIG_FILE" value="$(find object_manipulation_planner)/config/smpl_visual.ini"/>
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find object_manipulation_planner)/config/rosconsole.properties"/>
    <node name="object_manip_planner" pkg="object_manipulation_planner" type="object_manip_planner_node" launch-prefix="$(arg launch_prefix)">
        <param name="group_name" value="right_arm_torso_base"/>
        <param name="tip_link" value="limb_right_tool0"/>
        <param name="ik_group_name" value="right_arm"/>

        <param name="follow_joint_trajectory_action_name" value="$(arg follow_joint_trajectory_action_name)"/>
        <param name="gripper_command_action_name" value="$(arg gripper_command_action_name)"/>

        <param name="planning_frame" value="map"/>
        <param name="demonstrations_path" value="$(find object_manipulation_planner)/data"/>

        <param name="grid/size_x"       value="6.0"/>
        <param name="grid/size_y"       value="6.0"/>
        <param name="grid/size_z"       value="2.1"/>
        <param name="grid/origin_x"     value="-3.0"/>
        <param name="grid/origin_y"     value="-3.0"/>
        <param name="grid/origin_z"     value="-0.15"/>
        <param name="grid/resolution"   value="0.05"/>
        <param name="grid/max_dist"     value="0.8"/>

        <param name="base_weight" value="0.0"/>
        <!--
        <param name="heading_thresh" value="0.05"/>
        <param name="rot_db" value="smpl::to_radians(2)"/>
        <param name="pos_db" value="0.1"/>
        <param name="rot_weight" value="0.45 / smpl::to_radians(45)"/>
        <param name="combination" value="max"/>
        <param name="use_rotation" value="false"/>
        <param name="use_heading" value="false"/>
        <param name="heading_condition" value="discrete"/>
        <param name="disc_rotation_heuristic" value="true"/>
        <param name="disc_position_heuristic" value="true"/>
        -->

        <param name="w_heuristic" value="100.0"/>
        <param name="w_egraph" value="5.0"/>
    </node>
</launch>
